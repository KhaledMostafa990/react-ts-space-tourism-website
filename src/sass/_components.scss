@use 'variables.scss' as *;
@use 'mixins.scss' as *;

.header {
  z-index: 999;
  position: fixed;
  width: 100%;
  @include xl {
    top: 3.2rem;

    &::before {
      content: '';
      background-color: map-get($all_colors, primary, 100);
      width: 0;
      height: 0.2rem;

      position: absolute;
      left: 10.5%;
      opacity: 0.25;
      z-index: 999;
      border-radius: 1rem;

      animation: navLine 0.25s ease-out 0.15s forwards;
      @keyframes navLine {
        to {
          width: calc((420px * 100%) / 1440px);
        }
      }
    }
  }
}

.icon-wrapper {
  z-index: 999;
  @include md {
    display: none;
  }
}

.hamburger-icon {
  width: 24px;
  height: 24px;
  gap: 0.93rem;

  > * {
    width: 0;
    height: 0.35rem;
    background-color: map-get($all_colors, secondary, 100);
    transition: transform var(--base-transition-duration) ease-out 0.1s;
    @for $i from 1 to 4 {
      &:nth-child(#{$i}) {
        animation: hamburgerLine #{calc($i / 3.1)}s ease-out forwards;
      }
    }

    @keyframes hamburgerLine {
      to {
        width: 100%;
      }
    }
  }

  &:not(.active):hover {
    > * {
      &:nth-child(1) {
        transform: rotate(10deg);
      }
      &:nth-child(3) {
        transform: rotate(-10deg);
      }
    }
  }
  &.active:hover {
    > * {
      &:nth-child(1) {
        transform: rotate(60deg);
      }
      &:nth-child(3) {
        transform: rotate(-60deg);
      }
    }
  }
  &.active {
    justify-content: center;
    > * {
      position: absolute;
      &:nth-child(2) {
        opacity: 0;
      }
    }
    // The first and 3rd child to be the shape-> X
    > * {
      &:nth-child(1) {
        transform: rotate(45deg);
      }
      &:nth-child(3) {
        transform: rotate(-45deg);
      }
    }
  }
}

.main-nav {
  background-color: transparent;

  width: var(--main-nav-width);
  height: var(--main-nav-height);

  border-radius: 0.6rem;
  transition: all var(--base-transition-duration) ease-in-out;
  animation: navbg 2.5s ease-out 0.2s forwards;
  @keyframes navbg {
    to {
      background-color: map-get($all_colors, primary, 600);
      backdrop-filter: blur(81px);
      -webkit-backdrop-filter: blur(81px);
    }
  }

  &:not(&-example) {
    position: fixed;
    right: -80%;
    top: 0;
    opacity: 0.2;
    &.active {
      opacity: 1;
      right: 0;
    }
  }

  @include md {
    --main-nav-height: 9.6rem;

    &:not(&-example) {
      opacity: 1;
      right: 0;
    }
  }

  @include lg {
    width: calc(var(--main-nav-width) - 5%);
  }

  @include xl {
    &:not(&-example) {
      top: 4rem;
    }
  }
  // nav list
  &__list {
    position: relative;
    height: var(--main-navlist-height);
    width: 100%;
    & > * {
      flex: 1;
    }

    @include md {
      width: var(--main-navlist-width);
      height: 100%;
    }
    @include lg {
      width: calc(var(--main-navlist-width) * 0.8);
    }
  }

  // nav item
  &__item {
    // Show the indicator behaviour on active/hover states
    @include indicatorForVerticalNavitem;

    &::before {
      content: '';
      transition: all calc(var(--base-transition-duration) * 1.5);
      background-color: map-get($all_colors, primary, 400);
      position: absolute;
      opacity: 0;
      z-index: -999;
    }

    @include md {
      height: 100%;

      @include indicatorForHorizontalNavitem;

      > * {
        height: 100%;
      }
    }
  }

  &__link {
    width: 100%;
    height: 100%;
    @include md {
      span {
        display: none;
      }
    }
    @include xl {
      span {
        display: initial;
      }
    }
  }
}

.secondary-nav {
  &__list {
    position: relative;
    gap: 3px;
    width: calc(var(--secondary-navlist-width));

    > * {
      flex: 1 0 25%;
    }
  }

  &__item {
    @include indicatorSecondaryNavitem;
  }
}

.indicator {
  position: absolute;
  &--main-nav {
    // indicator item positions
    @include indicatorVerticallyPosition;
    transition: var(--base-transition-duration);

    @include md {
      @include indicatorHorizontallyPosition;
      top: 9rem;
    }

    // indicator before & after element
    &::after {
      content: '';
      @include indicatorVerticallyPosition;
      position: absolute;
      transition: var(--base-transition-duration);
      opacity: 0;

      @include md {
        @include indicatorHorizontallyPosition;
      }
    }
  }

  &--secondary-nav {
    @include indicatorSeceondNavPosition;

    &::after,
    &::before {
      content: '';
      position: absolute;
      transition: var(--base-transition-duration);
      opacity: 0;
      @include indicatorSeceondNavPosition;
    }
  }
}

.circling-item {
  cursor: pointer;
  user-select: none;
  width: 1.4rem;
  height: 1.4rem;
  border-radius: 50%;
  transition: all var(--base-transition-duration) ease-out;
  @include xl {
    width: 1.8rem;
    height: 1.8rem;
  }

  &.active {
    background-color: map-get($all_colors, primary, 100);
  }

  &:not(&.active) {
    &:hover {
      background-color: map-get($all_colors, primary, 200);
    }
  }
}

.numbered-item {
  cursor: pointer;
  user-select: none;
  $baseSize: 4rem;
  width: $baseSize;
  height: $baseSize;
  border-radius: 50%;

  background-color: none;

  border: 0.1rem solid map-get($all_colors, primary, 200);
  transition: all var(--base-transition-duration) ease-out;

  @include md {
    width: $baseSize * 1.5;
    height: $baseSize * 1.5;
  }
  @include xl {
    width: $baseSize * 2;
    height: $baseSize * 2;
    // font-size: map-get($font_size_map, fs-600, xl);
  }

  &.active {
    background-color: map-get($all_colors, primary, 100);
    span {
      color: map-get($all_colors, tertiary, 100);
    }
  }

  &:hover {
    border: 0.1rem solid map-get($all_colors, primary, 100);
  }
}

.btn {
  position: relative;
  background: none;
  border: 0;

  &--main {
    $size: 17rem;
    background-color: map-get($all_colors, primary, 100);

    width: $size;
    height: $size;

    border-radius: 50%;
    transition: var(--base-transition-duration);

    @include md {
      font-size: map-get($font_size_map, fs-600, xl);
      width: calc($size * 1.5);
      height: calc($size * 1.5);
    }

    @include xl {
      font-size: map-get($font_size_map, fs-600, xl);
      width: calc($size * 1.8);
      height: calc($size * 1.8);
    }

    &:hover {
      box-shadow: 0rem 0rem 0.15rem 6.5rem rgba(255, 255, 255, 0.1);
    }
    &--hoverd {
      box-shadow: 0rem 0rem 0.15rem 6.5rem rgba(255, 255, 255, 0.1);
    }
  }
}
